---
title: "Reproducible Research: Peer Assessment 1"
output: 
  html_document:
    keep_md: true
---


## Loading and preprocessing the data
```{r}
bitdata <- read.csv("/Users/Sandeep/Documents/activity.csv", header=T)
head(bitdata)
tail(bitdata)
bitdata[600,]
```

## What is mean total number of steps taken per day?
```{r fig.width=7, fig.height=6}
hist(bitdata$steps,col= "red")
```

```{r}
mean(bitdata$steps,na.rm="True")
median(bitdata$steps,na.rm="True")
```

## What is the average daily activity pattern?
```{r}
library(dplyr)
interval <- group_by (bitdata,interval)
intervalbitdata <- summarize(interval,steps=mean(steps,na.rm="True"))
```
```{r fig.width=7, fig.height=6}
plot(intervalbitdata$interval,intervalbitdata$steps,type="l")
```

## Find the interval with the most number of steps 
```{r}
arrangeintervalbitdata <- arrange(intervalbitdata,steps)
tail(arrangeintervalbitdata)

# The interval with the most number of steps is 835
```

## Imputing missing values
```{r}
count(bitdata[!complete.cases(bitdata),])

#There are 2304 missing values. 
```

```{r}
zerobitdata <- bitdata
zerobitdata[is.na(zerobitdata)] <- 0
head(zerobitdata)
mean(zerobitdata$steps)
median(zerobitdata$steps)

#These values differ from the original dataset. The impact is that the data will be incorrect, and the means / medians will be closer to the values inputted for the missing values. 
```

## Are there differences in activity patterns between weekdays and weekends?
```{r}
class(bitdata$date) <- "Date"
weekbitdata <- mutate (bitdata, day = weekdays(date, abbreviate = FALSE))
timebitdata <- weekbitdata  %>% mutate(time = ifelse(day == "Saturday", "Weekend", ifelse(day == "Sunday", "Weekend", "Weekday")))
```

```{r}
panelplotdata <- timebitdata %>% group_by (interval,time) %>% summarise(steps=mean(steps,na.rm="True"))
```

```{r}
class(panelplotdata$time)
weekdayplot <- subset(panelplotdata,panelplotdata$time=="Weekday")
weekendplot <- subset(panelplotdata,panelplotdata$time=="Weekend")
```

```{r fig.width=7, fig.height=6}
par(mfrow=c(2,1))
plot(weekdayplot$interval,weekdayplot$steps,type="l")
plot(weekendplot$interval,weekendplot$steps,type="l")
```

